Return-Path: <linux-pwm+bounces-6896-lists+linux-pwm=lfdr.de@vger.kernel.org>
X-Original-To: lists+linux-pwm@lfdr.de
Delivered-To: lists+linux-pwm@lfdr.de
Received: from sv.mirrors.kernel.org (sv.mirrors.kernel.org [139.178.88.99])
	by mail.lfdr.de (Postfix) with ESMTPS id 1BDEDB138FC
	for <lists+linux-pwm@lfdr.de>; Mon, 28 Jul 2025 12:31:29 +0200 (CEST)
Received: from smtp.subspace.kernel.org (relay.kernel.org [52.25.139.140])
	(using TLSv1.2 with cipher ECDHE-ECDSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by sv.mirrors.kernel.org (Postfix) with ESMTPS id 76BE43B6C6E
	for <lists+linux-pwm@lfdr.de>; Mon, 28 Jul 2025 10:30:59 +0000 (UTC)
Received: from localhost.localdomain (localhost.localdomain [127.0.0.1])
	by smtp.subspace.kernel.org (Postfix) with ESMTP id 6A49D20125F;
	Mon, 28 Jul 2025 10:31:26 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=collabora.com header.i=@collabora.com header.b="KLD00ixd"
X-Original-To: linux-pwm@vger.kernel.org
Received: from bali.collaboradmins.com (bali.collaboradmins.com [148.251.105.195])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 055821C6BE
	for <linux-pwm@vger.kernel.org>; Mon, 28 Jul 2025 10:31:23 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=148.251.105.195
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1753698686; cv=none; b=oMsNb9q0tyyuUjMISdOW2p2h/uSS2ZDzvlfE5qO7/uqUf7QEOXzoi3/3oExcVIu6LR1BsRqp3oag7B7oUWTGBsPn6Cppy90hqRU/beujO3VHl2HPNO2dA5YTShsaM8S6yAzOgEQe1N4fg+EenD05yRwCdsJMWFhiL2XTaZ9IPzo=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1753698686; c=relaxed/simple;
	bh=fr2sMayk+dxmv8PYp2bPRYDp+i45PTMIsl+txmuuBxA=;
	h=Message-ID:Date:MIME-Version:Subject:To:Cc:References:From:
	 In-Reply-To:Content-Type; b=e5iJCXlP2rbN3w7srVgaQN6eISz0Mm1K0ffqEFLyF6hKphedQmSRXRIHvOK2vmyHexku/jjyKq3W0+LlHCd0j2vfIw1aqY/KaYOEAWz6mHBMcE3r/E89MnwCENKrPVeOF1RTZj9WSdG9BC2FN5peDE5PYkbNU0j8weN1GK9LpwQ=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=collabora.com; spf=pass smtp.mailfrom=collabora.com; dkim=pass (2048-bit key) header.d=collabora.com header.i=@collabora.com header.b=KLD00ixd; arc=none smtp.client-ip=148.251.105.195
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=collabora.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=collabora.com
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=collabora.com;
	s=mail; t=1753698682;
	bh=fr2sMayk+dxmv8PYp2bPRYDp+i45PTMIsl+txmuuBxA=;
	h=Date:Subject:To:Cc:References:From:In-Reply-To:From;
	b=KLD00ixd1h76FA7vAK4g+5ZbjutxtwRH+azhwUNgHmFoXi7COHA0Y6NKxDDKDcxOI
	 Cr2mn6GnWMQ6pcyye0AgJtp6E4/GdLRVmpm+3mdrS3Q+nbGi/qHrhHNBXpQ1FUXeiX
	 cl9N2RqmSFcknA/vV/ftwjpRatRjdOnX9c34MrVBrpO/wtAII0fuHnyi92JAcHZq/+
	 KuZT2c14PN3TNj3+0CKnz8FLgjQKYcfLcALiDQEIRZExMuCjTcVkFJQLwVt6jBhfh1
	 ouOWZrXpbXbFd2VNdiNI+5Sb+F4HM8rYHlm/zf2Ib2g0POxBlKiWQaRXLPdKvADaEJ
	 YBB3iUppD+qcQ==
Received: from [192.168.1.100] (2-237-20-237.ip236.fastwebnet.it [2.237.20.237])
	(using TLSv1.3 with cipher TLS_AES_128_GCM_SHA256 (128/128 bits)
	 key-exchange X25519 server-signature RSA-PSS (4096 bits) server-digest SHA256)
	(No client certificate requested)
	(Authenticated sender: kholk11)
	by bali.collaboradmins.com (Postfix) with ESMTPSA id CEA1A17E1439;
	Mon, 28 Jul 2025 12:31:21 +0200 (CEST)
Message-ID: <8ff50873-f6c5-4c83-bb65-0f234eaf8172@collabora.com>
Date: Mon, 28 Jul 2025 12:31:20 +0200
Precedence: bulk
X-Mailing-List: linux-pwm@vger.kernel.org
List-Id: <linux-pwm.vger.kernel.org>
List-Subscribe: <mailto:linux-pwm+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-pwm+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
User-Agent: Mozilla Thunderbird
Subject: Re: [PATCH v2] pwm: mediatek: Fix duty and period setting
To: =?UTF-8?Q?Uwe_Kleine-K=C3=B6nig?= <u.kleine-koenig@baylibre.com>,
 Matthias Brugger <matthias.bgg@gmail.com>, John Crispin <john@phrozen.org>
Cc: linux-pwm@vger.kernel.org, linux-arm-kernel@lists.infradead.org,
 linux-mediatek@lists.infradead.org
References: <20250724210041.2513590-2-u.kleine-koenig@baylibre.com>
From: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
Content-Language: en-US
In-Reply-To: <20250724210041.2513590-2-u.kleine-koenig@baylibre.com>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 8bit

Il 24/07/25 23:00, Uwe Kleine-König ha scritto:
> The period generated by the hardware is
> 
> 	(PWMDWIDTH + 1) << CLKDIV) / freq
> 
> according to my tests with a signal analyser and also the documentation.
> 
> The current algorithm doesn't consider the `+ 1` part and so configures
> slightly too high periods. The same issue exists for the duty cycle
> setting. So subtract 1 from both the register values for period and
> duty cycle. If period is 0, bail out, if duty_cycle is 0, just disable
> the PWM which results in a constant low output.
> 
> Note that clk handling is dropped from pwm_mediatek_{en,dis}able to
> handle duty_cycle = 0, so the calls in pwm_mediatek_apply() have to be
> modified to do clk handling, too.

The changes LGTM, but please split those in two commits, one that fixes the +1
and one that changes the clock handling.

After which:

Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>

Cheers,
Angelo

> 
> Fixes: caf065f8fd58 ("pwm: Add MediaTek PWM support")
> Signed-off-by: Uwe Kleine-König <u.kleine-koenig@baylibre.com>
> ---
> Hello,
> 
> changes since (implicit) v1,
> https://lore.kernel.org/linux-pwm/20250710163705.2095418-2-u.kleine-koenig@baylibre.com/:
> 
>   - Drop superflous parenthesis from commit log
>   - To implement drop the enable register instead of bit 15 in the CON
>     register, adapt commit log accordingly.
> 
> Best regards
> Uwe
> 
>   drivers/pwm/pwm-mediatek.c | 76 ++++++++++++++++++++------------------
>   1 file changed, 41 insertions(+), 35 deletions(-)
> 
> diff --git a/drivers/pwm/pwm-mediatek.c b/drivers/pwm/pwm-mediatek.c
> index 6777c511622a..4460bbca2582 100644
> --- a/drivers/pwm/pwm-mediatek.c
> +++ b/drivers/pwm/pwm-mediatek.c
> @@ -121,6 +121,26 @@ static inline void pwm_mediatek_writel(struct pwm_mediatek_chip *chip,
>   	writel(value, chip->regs + chip->soc->reg_offset[num] + offset);
>   }
>   
> +static void pwm_mediatek_enable(struct pwm_chip *chip, struct pwm_device *pwm)
> +{
> +	struct pwm_mediatek_chip *pc = to_pwm_mediatek_chip(chip);
> +	u32 value;
> +
> +	value = readl(pc->regs);
> +	value |= BIT(pwm->hwpwm);
> +	writel(value, pc->regs);
> +}
> +
> +static void pwm_mediatek_disable(struct pwm_chip *chip, struct pwm_device *pwm)
> +{
> +	struct pwm_mediatek_chip *pc = to_pwm_mediatek_chip(chip);
> +	u32 value;
> +
> +	value = readl(pc->regs);
> +	value &= ~BIT(pwm->hwpwm);
> +	writel(value, pc->regs);
> +}
> +
>   static int pwm_mediatek_config(struct pwm_chip *chip, struct pwm_device *pwm,
>   			       int duty_ns, int period_ns)
>   {
> @@ -150,7 +170,10 @@ static int pwm_mediatek_config(struct pwm_chip *chip, struct pwm_device *pwm,
>   	do_div(resolution, clk_rate);
>   
>   	cnt_period = DIV_ROUND_CLOSEST_ULL((u64)period_ns * 1000, resolution);
> -	while (cnt_period > 8191) {
> +	if (!cnt_period)
> +		return -EINVAL;
> +
> +	while (cnt_period > 8192) {
>   		resolution *= 2;
>   		clkdiv++;
>   		cnt_period = DIV_ROUND_CLOSEST_ULL((u64)period_ns * 1000,
> @@ -173,9 +196,16 @@ static int pwm_mediatek_config(struct pwm_chip *chip, struct pwm_device *pwm,
>   	}
>   
>   	cnt_duty = DIV_ROUND_CLOSEST_ULL((u64)duty_ns * 1000, resolution);
> +
>   	pwm_mediatek_writel(pc, pwm->hwpwm, PWMCON, BIT(15) | clkdiv);
> -	pwm_mediatek_writel(pc, pwm->hwpwm, reg_width, cnt_period);
> -	pwm_mediatek_writel(pc, pwm->hwpwm, reg_thres, cnt_duty);
> +	pwm_mediatek_writel(pc, pwm->hwpwm, reg_width, cnt_period - 1);
> +
> +	if (cnt_duty) {
> +		pwm_mediatek_writel(pc, pwm->hwpwm, reg_thres, cnt_duty - 1);
> +		pwm_mediatek_enable(chip, pwm);
> +	} else {
> +		pwm_mediatek_disable(chip, pwm);
> +	}
>   
>   out:
>   	pwm_mediatek_clk_disable(chip, pwm);
> @@ -183,35 +213,6 @@ static int pwm_mediatek_config(struct pwm_chip *chip, struct pwm_device *pwm,
>   	return ret;
>   }
>   
> -static int pwm_mediatek_enable(struct pwm_chip *chip, struct pwm_device *pwm)
> -{
> -	struct pwm_mediatek_chip *pc = to_pwm_mediatek_chip(chip);
> -	u32 value;
> -	int ret;
> -
> -	ret = pwm_mediatek_clk_enable(chip, pwm);
> -	if (ret < 0)
> -		return ret;
> -
> -	value = readl(pc->regs);
> -	value |= BIT(pwm->hwpwm);
> -	writel(value, pc->regs);
> -
> -	return 0;
> -}
> -
> -static void pwm_mediatek_disable(struct pwm_chip *chip, struct pwm_device *pwm)
> -{
> -	struct pwm_mediatek_chip *pc = to_pwm_mediatek_chip(chip);
> -	u32 value;
> -
> -	value = readl(pc->regs);
> -	value &= ~BIT(pwm->hwpwm);
> -	writel(value, pc->regs);
> -
> -	pwm_mediatek_clk_disable(chip, pwm);
> -}
> -
>   static int pwm_mediatek_apply(struct pwm_chip *chip, struct pwm_device *pwm,
>   			      const struct pwm_state *state)
>   {
> @@ -221,8 +222,10 @@ static int pwm_mediatek_apply(struct pwm_chip *chip, struct pwm_device *pwm,
>   		return -EINVAL;
>   
>   	if (!state->enabled) {
> -		if (pwm->state.enabled)
> +		if (pwm->state.enabled) {
>   			pwm_mediatek_disable(chip, pwm);
> +			pwm_mediatek_clk_disable(chip, pwm);
> +		}
>   
>   		return 0;
>   	}
> @@ -231,8 +234,11 @@ static int pwm_mediatek_apply(struct pwm_chip *chip, struct pwm_device *pwm,
>   	if (err)
>   		return err;
>   
> -	if (!pwm->state.enabled)
> -		err = pwm_mediatek_enable(chip, pwm);
> +	if (!pwm->state.enabled) {
> +		err = pwm_mediatek_clk_enable(chip, pwm);
> +		if (err < 0)
> +			return err;
> +	}
>   
>   	return err;
>   }
> 
> base-commit: a02b105fe9f2b82cbd13b13a98c2b9ffae4a7c27



